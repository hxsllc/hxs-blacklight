version: '3.7'
volumes:
  app:
  app_gems:
  postgres:
  solr_data:
  solr_backups:

networks:
  solr:
  db:

services:
  solr1:
    image: solr:9.0.0
    container_name: solr1
    ports:
      - "8981:8983"
    environment:
      - ZK_HOST=zoo1:2181,zoo2:2181,zoo3:2181
    volumes:
      - solr_data:/var/solr
      - solr_backups:/var/backups
    networks:
      - solr
    depends_on:
      - zoo1
      - zoo2
      - zoo3

  solr2:
    image: solr:9.0.0
    container_name: solr2
    ports:
      - "8982:8983"
    environment:
      - ZK_HOST=zoo1:2181,zoo2:2181,zoo3:2181
    volumes:
      - solr_data:/var/solr
      - solr_backups:/var/backups
    networks:
      - solr
    depends_on:
      - zoo1
      - zoo2
      - zoo3

  solr3:
    image: solr:9.0.0
    container_name: solr3
    ports:
      - "8983:8983"
    environment:
      - ZK_HOST=zoo1:2181,zoo2:2181,zoo3:2181
    volumes:
      - solr_data:/var/solr
      - solr_backups:/var/backups
    networks:
      - solr
    depends_on:
      - zoo1
      - zoo2
      - zoo3

  zoo1:
    image: zookeeper:3.6.2
    container_name: zoo1
    restart: always
    hostname: zoo1
    ports:
      - 2181:2181
      - 7001:7000
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=zoo1:2888:3888;2181 server.2=zoo2:2888:3888;2181 server.3=zoo3:2888:3888;2181
      ZOO_4LW_COMMANDS_WHITELIST: mntr, conf, ruok
      ZOO_CFG_EXTRA: "metricsProvider.className=org.apache.zookeeper.metrics.prometheus.PrometheusMetricsProvider metricsProvider.httpPort=7000 metricsProvider.exportJvmInfo=true"
    volumes:
      - solr_backups:/var/backups
    networks:
      - solr

  zoo2:
    image: zookeeper:3.6.2
    container_name: zoo2
    restart: always
    hostname: zoo2
    ports:
      - 2182:2181
      - 7002:7000
    environment:
      ZOO_MY_ID: 2
      ZOO_SERVERS: server.1=zoo1:2888:3888;2181 server.2=zoo2:2888:3888;2181 server.3=zoo3:2888:3888;2181
      ZOO_4LW_COMMANDS_WHITELIST: mntr, conf, ruok
      ZOO_CFG_EXTRA: "metricsProvider.className=org.apache.zookeeper.metrics.prometheus.PrometheusMetricsProvider metricsProvider.httpPort=7000 metricsProvider.exportJvmInfo=true"
    volumes:
      - solr_backups:/var/backups
    networks:
      - solr

  zoo3:
    image: zookeeper:3.6.2
    container_name: zoo3
    restart: always
    hostname: zoo3
    ports:
      - 2183:2181
      - 7003:7000
    environment:
      ZOO_MY_ID: 3
      ZOO_SERVERS: server.1=zoo1:2888:3888;2181 server.2=zoo2:2888:3888;2181 server.3=zoo3:2888:3888;2181
      ZOO_4LW_COMMANDS_WHITELIST: mntr, conf, ruok
      ZOO_CFG_EXTRA: "metricsProvider.className=org.apache.zookeeper.metrics.prometheus.PrometheusMetricsProvider metricsProvider.httpPort=7000 metricsProvider.exportJvmInfo=true"
    volumes:
      - solr_backups:/var/backups
    networks:
      - solr

  postgres:
    image: "postgres:15.0-alpine"
    container_name: "hxs-blacklight-postgres"
    restart: always
    env_file: .env
    ports:
      - '5438:5432'
    volumes:
      - postgres:/var/lib/postgresql/data
    networks:
      - db

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: "hxs-blacklight-app"
    env_file: .env
    volumes:
      - .:/app
      - app_gems:/usr/local/bundle/
    ports:
      - "3000:3000"
    command:
      - "./bin/dev"
    networks:
      - solr
      - db
    depends_on:
      - postgres
      - solr1
      - solr2
      - solr3
